name: Build and Test

on:
  push:
    branches: 
      - master  # Trigger on push to master branch
  pull_request:
    branches: 
      - master  # Trigger on PRs to master branch

jobs:
  build:

    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
    # Checkout the code
    - uses: actions/checkout@v4  # Checkout repository code

    # Set up Java (for Spring Boot)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'  # Specify Java version
        distribution: 'temurin'  # AdoptOpenJDK distribution (now Temurin)
        cache: maven  # Cache Maven dependencies to improve performance

    # Build the Spring Boot backend with Maven
    - name: Build backend with Maven
      run: mvn -B package --file backend/Urlshortner-2/pom.xml  # Adjust path to pom.xml if needed

    # Cache Node.js dependencies (for React + Vite frontend)
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: ~/.npm  # Cache npm modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('frontend/package-lock.json') }}  # Use package-lock.json to cache dependencies
        restore-keys: |
          ${{ runner.os }}-node-modules-

    # Set up Node.js (for React + Vite)
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'  # Specify the Node.js version for frontend

    # Install frontend dependencies (React + Vite)
    - name: Install frontend dependencies
      run: |
        cd frontend  # Navigate to the frontend directory
        npm install  # Install frontend dependencies

    # Build the frontend using Vite
    - name: Build frontend with Vite
      run: |
        cd frontend  # Navigate to the frontend directory
        npm run build  # Build the frontend with Vite

    # Run backend tests
    - name: Run backend tests
      run: |
        cd backend  # Navigate to the backend directory
        mvn test  # Run backend tests using Maven

    # Run frontend tests (if applicable)
    - name: Run frontend tests
      run: |
        cd frontend  # Navigate to the frontend directory
        npm run test  # Run frontend tests

    # Optional: Upload the Maven dependency graph to GitHub for Dependabot
    - name: Update Maven dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    # Check if any test fails and fail the job
    - name: Check test results
      run: |
        if [ $? -ne 0 ]; then exit 1; fi  # Exit if any tests fail
