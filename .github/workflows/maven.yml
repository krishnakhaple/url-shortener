name: Build and Test

on:
  push:
    branches:
      - master  # Trigger on push to master branch
  pull_request:
    branches:
      - master  # Trigger on PRs to master branch

jobs:
  build:

    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    services:
      mysql:
        image: mysql:8  # Use MySQL Docker container
        env:
          MYSQL_ROOT_PASSWORD: root  # Root password for MySQL
        ports:
          - 3306:3306  # Expose MySQL port
        options: --health-cmd="mysqladmin ping --silent" --health-timeout=30s --health-retries=3  # Health check to ensure MySQL is ready

    steps:
      # Checkout the code from the repository
      - uses: actions/checkout@v4

      # Set up Java JDK 17 for Spring Boot
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Set up MySQL database
      - name: Set up MySQL database
        run: |
          sudo apt-get install mysql-client  # Install MySQL client to run commands
          mysql -h 127.0.0.1 -u root -proot -e "CREATE DATABASE IF NOT EXISTS url_shortener;"  # Create the url_shortener database

      # Build the backend with Maven
      - name: Build backend with Maven
        run: |
          mvn -B package --file backend/Urlshortner-2/pom.xml

      # Run backend tests
      - name: Run backend tests
        run: |
          mvn test --file backend/Urlshortner-2/pom.xml

      # Cache Node.js modules (for frontend)
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm  # Cache npm modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('frontend/my-url-shortener/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # Set up Node.js for frontend (React + Vite)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'  # Specify the Node.js version

      # Install frontend dependencies (React + Vite)
      - name: Install frontend dependencies
        run: |
          npm install --prefix frontend/my-url-shortener

      # Build the frontend with Vite
      - name: Build frontend with Vite
        run: |
          npm run build --prefix frontend/my-url-shortener

      # Run frontend tests (if applicable)
      - name: Run frontend tests
        run: |
          npm run test --prefix frontend/my-url-shortener

      # Optional: Upload the Maven dependency graph to GitHub for Dependabot
      - name: Update Maven dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

      # Check if any test fails and fail the job if necessary
      - name: Check test results
        run: |
          if [ $? -ne 0 ]; then exit 1; fi  # Exit if any tests fail
